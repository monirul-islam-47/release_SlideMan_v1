[tool:pytest]
minversion = 6.0
addopts = 
    -ra 
    -q 
    --tb=short
    --strict-markers
    --cov=services
    --cov=api
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-fail-under=80
    --asyncio-mode=auto
testpaths = tests
markers =
    unit: Unit tests for individual functions and classes
    integration: Integration tests for service interactions
    e2e: End-to-end tests for complete workflows
    performance: Performance and load testing
    slow: Slow running tests (> 5 seconds)
    requires_openai: Tests requiring OpenAI API (may be skipped in CI)
    requires_powerpoint: Tests requiring PowerPoint COM (Windows only)
    database: Tests that require database operations
    api: Tests for API endpoints
    search: Tests for search functionality
    ai: Tests for AI service functionality
    assembly: Tests for assembly and export functionality
    frontend: Tests for frontend components
asyncio_mode = auto
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore:.*unclosed.*:ResourceWarning
python_files = test_*.py *_test.py
python_functions = test_*
python_classes = Test*
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
junit_family = xunit2

# Test discovery and execution
collect_ignore = [
    "build",
    "dist", 
    ".git",
    ".tox",
    "node_modules"
]

# Coverage configuration
[coverage:run]
source = services, api
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
branch = true

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = PrezI Test Coverage Report